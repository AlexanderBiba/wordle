@use "palette";
@use "animation";

// Reset and base styles
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: linear-gradient(135deg, palette.$background-light 0%, palette.$gray-50 100%);
  min-height: 100vh;
  transition: background animation.$transition-normal;
  
  &.dark-mode {
    background: linear-gradient(135deg, palette.$background-dark 0%, palette.$dark-light 100%);
  }
}

.app {
  min-height: 100vh;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 1rem;
  background: linear-gradient(135deg, palette.$background-light 0%, palette.$gray-50 100%);
  position: relative;
  overflow-x: hidden;
  transition: background animation.$transition-normal;
  
  &.dark-mode {
    background: linear-gradient(135deg, palette.$background-dark 0%, palette.$dark-light 100%);
  }
}

// Header container with theme toggle
.header-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  max-width: 600px;
  margin-bottom: 2rem;
  background: linear-gradient(135deg, palette.$primary 0%, palette.$primary-dark 100%);
  border-radius: palette.$border-radius-lg;
  box-shadow: palette.$shadow-lg;
  padding: 1rem 1.5rem;
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
    animation: shimmer 3s ease-in-out infinite;
  }
}

.header-actions {
  display: flex;
  align-items: center;
  gap: 1rem;
  position: relative;
  z-index: 1;
}

// Modern header title
.header {
  color: palette.$white;
  margin: 0;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: -0.025em;
  text-align: left;
  position: relative;
  z-index: 1;
}

// Profile button
.profile-btn {
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  padding: 0;
  cursor: pointer;
  transition: all animation.$transition-normal;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 3rem;
  height: 3rem;
  position: relative;
  z-index: 1;
  overflow: hidden;
  
  &:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.4);
    transform: scale(1.05);
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.3);
  }
  
  .profile-avatar {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 50%;
  }
}

// Theme toggle button
.theme-toggle {
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: palette.$border-radius;
  padding: 0.75rem;
  cursor: pointer;
  transition: all animation.$transition-normal;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 3rem;
  height: 3rem;
  position: relative;
  z-index: 1;
  
  &:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.4);
    transform: scale(1.05);
  }
  
  &:active {
    transform: scale(0.95);
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.3);
  }
  
  .toggle-icon {
    font-size: 1.25rem;
    transition: transform animation.$transition-normal;
    color: palette.$white;
  }
  
  &:hover .toggle-icon {
    transform: scale(1.1);
  }
}



@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

// Login prompt
.login-prompt {
  width: 100%;
  max-width: 600px;
  margin-bottom: 2rem;
  animation: fadeIn 0.5s ease-out;
}

.login-content {
  background: palette.$surface;
  border-radius: palette.$border-radius-xl;
  box-shadow: palette.$shadow-xl;
  border: 1px solid palette.$border-light;
  padding: 2rem;
  text-align: center;
  transition: all animation.$transition-normal;
  
  .dark-mode & {
    background: palette.$surface-dark;
    border-color: palette.$border-dark;
    box-shadow: palette.$shadow-xl-dark;
  }
  
  h3 {
    margin: 0 0 1rem 0;
    color: palette.$text-primary-light;
    font-size: 1.5rem;
    font-weight: 700;
    
    .dark-mode & {
      color: palette.$text-primary-dark;
    }
  }
  
  p {
    margin: 0 0 1.5rem 0;
    color: palette.$text-secondary-light;
    font-size: 1rem;
    
    .dark-mode & {
      color: palette.$text-secondary-dark;
    }
  }
  
  .login-btn {
    background: linear-gradient(135deg, palette.$primary 0%, palette.$primary-light 100%);
    color: palette.$white;
    border: none;
    padding: 1rem 2rem;
    border-radius: palette.$border-radius-lg;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all animation.$transition-normal;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    
    &:hover {
      transform: translateY(-2px);
      box-shadow: palette.$shadow-lg;
    }
    
    &:active {
      transform: translateY(0);
    }
    
    &:focus {
      outline: none;
      box-shadow: 0 0 0 3px rgba(palette.$primary, 0.3);
    }
  }
}

// Status wrapper with modern styling
.status-wrapper {
  margin-bottom: 2rem;
  width: 100%;
  max-width: 600px;
}

.status-text {
  padding: 1rem 1.5rem;
  border-radius: palette.$border-radius;
  font-weight: 500;
  font-size: 1.1rem;
  text-align: center;
  transition: animation.$transition-normal;
  box-shadow: palette.$shadow;
  background: palette.$surface;
  border: 1px solid palette.$border-light;

  &.win {
    background: linear-gradient(135deg, palette.$success 0%, palette.$success-light 100%);
    color: palette.$white;
    border-color: palette.$success;
    box-shadow: palette.$shadow-lg, 0 0 20px rgba(palette.$success, 0.3);
    animation: scaleIn 0.5s ease-out;
    
    .status {
      background: transparent;
      color: palette.$white;
    }
  }

  &.lose {
    background: linear-gradient(135deg, palette.$error 0%, palette.$error-light 100%);
    color: palette.$white;
    border-color: palette.$error;
    
    .status {
      background: transparent;
      color: palette.$white;
    }
  }

  &.invalid {
    background: linear-gradient(135deg, palette.$warning 0%, palette.$warning-light 100%);
    color: palette.$white;
    border-color: palette.$warning;
    animation: shake 0.5s ease-in-out;
    
    .status {
      background: transparent;
      color: palette.$white;
    }
  }

  &.loading {
    background: linear-gradient(135deg, palette.$primary 0%, palette.$primary-light 100%);
    color: palette.$white;
    border-color: palette.$primary;
    
    .status {
      background: transparent;
      color: palette.$white;
    }
  }
}

.status {
  color: palette.$text-primary-light;
  background: transparent;
  font-size: 1.1rem;
  font-weight: 500;
  padding: 0;
  border-radius: 0;
}

// Dark mode status styles
.dark-mode .status-text {
  background: palette.$surface-dark;
  border-color: palette.$border-dark;
  
  .status {
    color: palette.$text-primary-dark;
  }
}

// Wordle game board with modern card design
.wordle-wrapper {
  margin-bottom: 2rem;
  width: 100%;
  max-width: 600px;
}

.wordle {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  padding: 2rem;
  background: palette.$surface;
  border-radius: palette.$border-radius-xl;
  box-shadow: palette.$shadow-xl;
  border: 1px solid palette.$border-light;
  min-height: 400px;
  justify-content: center;
  transition: all animation.$transition-normal;
}

// Dark mode wordle styles
.dark-mode .wordle {
  background: palette.$surface-dark;
  border-color: palette.$border-dark;
  box-shadow: palette.$shadow-xl-dark;
}

.word {
  display: flex;
  gap: 0.75rem;
  justify-content: center;
  align-items: center;
  height: 4rem;
  transition: animation.$transition-normal;

  &.current {
    .letter {
      border-color: palette.$primary;
      box-shadow: 0 0 0 2px rgba(palette.$primary, 0.2);
    }
  }

  &.invalid {
    animation: shake 0.5s ease-in-out;
  }
}

.letter {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 4rem;
  height: 4rem;
  border: 2px solid palette.$gray-300;
  border-radius: palette.$border-radius;
  font-size: 1.75rem;
  font-weight: 700;
  text-transform: uppercase;
  background: palette.$white;
  color: palette.$gray-900;
  transition: all animation.$transition-normal;
  position: relative;
  overflow: hidden;
  cursor: default;
  
  // Letter flip animation
  &.exact, &.misplaced {
    animation: flip 0.6s ease-in-out;
  }

  &.empty {
    background: palette.$gray-50;
    border-style: dashed;
    border-color: palette.$gray-200;
    color: transparent;
    
    &::after {
      content: '';
      position: absolute;
      width: 1px;
      height: 1px;
      background: palette.$gray-300;
      border-radius: 50%;
    }
  }

  &.exact {
    background: linear-gradient(135deg, palette.$success 0%, palette.$success-light 100%);
    color: palette.$white;
    border-color: palette.$success;
    box-shadow: palette.$shadow-md, 0 0 20px rgba(palette.$success, 0.3);
    transform: scale(1.05);
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.2) 50%, transparent 70%);
      animation: shimmer 2s ease-in-out infinite;
    }
  }

  &.misplaced {
    background: linear-gradient(135deg, palette.$warning 0%, palette.$warning-light 100%);
    color: palette.$white;
    border-color: palette.$warning;
    box-shadow: palette.$shadow-md, 0 0 20px rgba(palette.$warning, 0.3);
    transform: scale(1.05);
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.2) 50%, transparent 70%);
      animation: shimmer 2s ease-in-out infinite;
    }
  }

  &.current {
    background: palette.$primary;
    color: palette.$white;
    border-color: palette.$primary;
    animation: ripple 2s infinite;
    transform: scale(1.05);
    box-shadow: palette.$shadow-md, 0 0 20px rgba(palette.$primary, 0.3);
  }

  span {
    transition: animation.$transition-fast;
    position: relative;
    z-index: 1;
  }
}

// Dark mode letter styles
.dark-mode .letter {
  background: palette.$surface-dark;
  color: palette.$text-primary-dark;
  border-color: palette.$border-dark;
  
  &.empty {
    background: palette.$dark-light;
    border-color: palette.$gray-600;
    
    &::after {
      background: palette.$gray-500;
    }
  }
}

// Statistics Display
.stats-wrapper {
  width: 100%;
  max-width: 600px;
  margin-bottom: 2rem;
  animation: fadeIn 0.5s ease-out;
}

.stats {
  background: palette.$surface;
  border-radius: palette.$border-radius-xl;
  box-shadow: palette.$shadow-xl;
  border: 1px solid palette.$border-light;
  padding: 2rem;
  text-align: center;
  transition: all animation.$transition-normal;
  
  h3 {
    margin: 0 0 1.5rem 0;
    color: palette.$text-primary-light;
    font-size: 1.5rem;
    font-weight: 700;
  }
  
  h4 {
    margin: 2rem 0 1rem 0;
    color: palette.$text-secondary-light;
    font-size: 1.1rem;
    font-weight: 600;
  }
}

// Dark mode stats styles
.dark-mode .stats {
  background: palette.$surface-dark;
  border-color: palette.$border-dark;
  box-shadow: palette.$shadow-xl-dark;
  
  h3 {
    color: palette.$text-primary-dark;
  }
  
  h4 {
    color: palette.$text-secondary-dark;
  }
}

.stats-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;
  margin-bottom: 1rem;
}

.stat-item {
  text-align: center;
  
  .stat-number {
    font-size: 2rem;
    font-weight: 800;
    color: palette.$primary;
    line-height: 1;
  }
  
  .stat-label {
    font-size: 0.875rem;
    color: palette.$text-secondary-light;
    font-weight: 500;
    margin-top: 0.25rem;
  }
}

// Dark mode stat item styles
.dark-mode .stat-item .stat-label {
  color: palette.$text-secondary-dark;
}

.guess-distribution {
  .guess-row {
  display: flex;
    align-items: center;
    margin-bottom: 0.5rem;
    gap: 0.75rem;
    
    .guess-number {
      width: 1.5rem;
      font-weight: 600;
      color: palette.$text-secondary-light;
    }
    
    .guess-bar {
  flex: 1;
      height: 1.5rem;
      background: palette.$gray-200;
      border-radius: palette.$border-radius;
      overflow: hidden;
      position: relative;
      
      .guess-fill {
        height: 100%;
        background: linear-gradient(135deg, palette.$success 0%, palette.$success-light 100%);
        border-radius: palette.$border-radius;
        transition: width animation.$transition-normal;
        min-width: 1px;
      }
    }
    
    .guess-count {
      width: 2rem;
      text-align: right;
      font-weight: 600;
      color: palette.$text-secondary-light;
    }
  }
}

// Dark mode guess distribution styles
.dark-mode .guess-distribution .guess-row {
  .guess-number,
  .guess-count {
    color: palette.$text-secondary-dark;
  }
  
  .guess-bar {
    background: palette.$gray-700;
  }
}

// Modern keyboard styling
.keyboard-wrapper {
  width: 100%;
  max-width: 600px;
  margin-top: 1rem;
}

.simple-keyboard.hg-theme-default {
  background: palette.$surface;
  border-radius: palette.$border-radius-lg;
  box-shadow: palette.$shadow-xl;
  border: 1px solid palette.$border-light;
  padding: 1rem;
  margin: 0;
  transition: all animation.$transition-normal;

  .hg-button {
    background: palette.$gray-100;
    border: 1px solid palette.$gray-200;
    border-radius: palette.$border-radius;
    color: palette.$gray-700;
    font-weight: 600;
    font-size: 0.9rem;
    height: 3rem;
    min-width: 2.5rem;
    transition: all animation.$transition-fast;
    box-shadow: palette.$shadow-sm;
    cursor: pointer;
    user-select: none;
    
    &:hover {
      background: palette.$gray-200;
      transform: translateY(-1px);
      box-shadow: palette.$shadow-md;
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: palette.$shadow-sm;
    }

    &:focus {
      outline: none;
      box-shadow: 0 0 0 3px rgba(palette.$primary, 0.3);
    }
  }

  .found-letter {
    background: linear-gradient(135deg, palette.$success 0%, palette.$success-light 100%);
    color: palette.$white;
    border-color: palette.$success;
    box-shadow: palette.$shadow-md;
    
    &:hover {
      background: linear-gradient(135deg, palette.$success-light 0%, palette.$success 100%);
      transform: translateY(-1px);
      box-shadow: palette.$shadow-lg;
    }
  }

  .absent-letter {
    background: linear-gradient(135deg, palette.$error 0%, palette.$error-light 100%);
    color: palette.$white;
    border-color: palette.$error;
    box-shadow: palette.$shadow-md;
    
    &:hover {
      background: linear-gradient(135deg, palette.$error-light 0%, palette.$error 100%);
      transform: translateY(-1px);
      box-shadow: palette.$shadow-lg;
    }
  }

  .emphasis {
    background: linear-gradient(135deg, palette.$primary 0%, palette.$primary-light 100%);
    color: palette.$white;
    border-color: palette.$primary;
    box-shadow: palette.$shadow-md, 0 0 20px rgba(palette.$primary, 0.3);
    animation: pulse 2s infinite;
    
    &:hover {
      background: linear-gradient(135deg, palette.$primary-light 0%, palette.$primary 100%);
      transform: translateY(-1px);
      box-shadow: palette.$shadow-lg, 0 0 30px rgba(palette.$primary, 0.4);
    }
  }
}

// Dark mode keyboard styles
.dark-mode .simple-keyboard.hg-theme-default {
  background: palette.$surface-dark;
  border-color: palette.$border-dark;
  box-shadow: palette.$shadow-xl-dark;
  
  .hg-button {
    background: palette.$gray-800;
    border-color: palette.$gray-700;
    color: palette.$text-primary-dark;
    
    &:hover {
      background: palette.$gray-700;
    }
  }
}

@keyframes pulse {
  0%, 100% {
    box-shadow: palette.$shadow-md, 0 0 20px rgba(palette.$primary, 0.3);
  }
  50% {
    box-shadow: palette.$shadow-md, 0 0 30px rgba(palette.$primary, 0.5);
  }
}

// Responsive design
@media (max-width: 768px) {
  .app {
    padding: 0.5rem;
  }
  
  .header-container {
    padding: 0.75rem 1rem;
    margin-bottom: 1.5rem;
  }
  
  .header {
    font-size: 1.75rem;
  }
  
  .header-actions {
    gap: 0.75rem;
  }
  
  .profile-btn {
    width: 2.75rem;
    height: 2.75rem;
  }
  
  .theme-toggle {
    min-width: 2.75rem;
    height: 2.75rem;
    padding: 0.5rem;
    
    .toggle-icon {
      font-size: 1rem;
    }
  }
  
  .wordle {
    padding: 1.5rem;
    gap: 0.5rem;
  }
  
  .letter {
    width: 3.5rem;
    height: 3.5rem;
    font-size: 1.5rem;
  }
  
  .word {
    gap: 0.5rem;
    height: 3.5rem;
  }
  
  .simple-keyboard.hg-theme-default {
    padding: 0.75rem;
    
    .hg-button {
      height: 2.5rem;
      min-width: 2rem;
      font-size: 0.8rem;
    }
  }
  
  .stats {
    padding: 1.5rem;
    
    h3 {
      font-size: 1.25rem;
    }
  }
  
  .stats-grid {
    gap: 0.75rem;
  }
  
  .stat-item .stat-number {
    font-size: 1.5rem;
  }
}

@media (max-width: 480px) {
  .letter {
    width: 3rem;
    height: 3rem;
    font-size: 1.25rem;
  }
  
  .word {
    gap: 0.4rem;
    height: 3rem;
  }
  
  .header-container {
    padding: 0.5rem 0.75rem;
  }
  
  .header {
    font-size: 1.5rem;
  }
  
  .header-actions {
    gap: 0.5rem;
  }
  
  .profile-btn {
    width: 2.5rem;
    height: 2.5rem;
  }
  
  .theme-toggle {
    min-width: 2.5rem;
    height: 2.5rem;
    padding: 0.4rem;
    
    .toggle-icon {
      font-size: 0.875rem;
    }
  }
  
  .stats {
    padding: 1rem;
    
    h3 {
      font-size: 1.125rem;
    }
  }
  
  .stats-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }
  
  .guess-distribution .guess-row {
    gap: 0.5rem;
    
    .guess-number {
      width: 1.25rem;
      font-size: 0.875rem;
    }
    
    .guess-count {
      width: 1.5rem;
      font-size: 0.875rem;
    }
  }
}
